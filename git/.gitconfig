[include]
  path = ~/.gitlocal

[filter "lfs"]
  clean = git-lfs clean %f
  smudge = git-lfs smudge %f
  required = true

[core]
  autocrlf = input
  safecrlf = true
  excludesfile = ~/.gitignore_global
	pager = diff-so-fancy | less --tabs=4 -RFX
  editor = vim

[alias]
  co = checkout
  ci = commit
  st = status
  s = status -s
  br = branch
  type = cat-file -t
  dump = cat-file -p
  b = branch -va
  r = remote -v
  t = tag -l
  unstage = reset HEAD
  uncommit = reset --soft HEAD^
  server = !git daemon --reuseaddr --verbose --base-path=. --export-all --base-path-relaxed --enable=receive-pack ./.git ./*/.git ./*.git
  # https://twitter.com/tpope/status/165631968996900865
  trust = !mkdir .git/safe

	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v

  # Switch to a branch, creating it if necessary
	gcb = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

  	# List aliases
	aliases = config --get-regexp alias

	# Amend the currently staged files to the latest commit
	amend = commit --amend --reuse-message=HEAD

  # Log Aliases
  last = log -n1 --stat
  changes = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
  short = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
  filelog = log -u  # show changes to a file
  changelog = log --pretty=format:\" * %s\"
  hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
  graph = log --graph --pretty=oneline --abbrev-commit
  lg = log --graph --pretty=format:'%C(yellow)%h%Creset -%C(red)%d%Creset %s %Cgreen(%ar)%Creset'
  l = !git --no-pager lg
#  l = log --pretty=oneline -n 20 --graph --abbrev-commit
  la = !git --no-pager lg --all

  d = diff --color-words
  	# Show the diff between the latest commit and the current state
	d1 = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

	# `git di $number` shows the diff between the state `$number` revisions ago and the current state
	di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"

  branches = branch --sort=-committerdate --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'

[color]
	ui = true

[color "branch"]

	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]

	meta = 11
	frag = magenta bold
	old = red bold
	new = green bold
	commit = yellow bold
	whitespace = red reverse

[color "status"]

	added = yellow
	changed = green
	untracked = cyan

[commit]
	# https://help.github.com/articles/signing-commits-using-gpg/
	# gpgsign = true

[gc]
  auto=1

[gui]
  # This is to make fonts readable in gitk on Linux (Redhat tested only)
  fontui = -family \"DejaVu Sans\" -size 10 -weight normal -slant roman -underline 0 -overstrike 0
  fontdiff = -family \"DejaVu Sans Mono\" -size 10 -weight normal -slant roman -underline 0 -overstrike 0

[diff]
	# Detect copies as well as renames
	renames = copies
  tool = meld

[difftool "default-difftool"]
  cmd = code --wait --diff $LOCAL $REMOTE

[merge]
  tool = code
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
